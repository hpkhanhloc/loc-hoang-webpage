name: Deploy to Preview Channel
"on":
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  buid_deploy_and_preview:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: "/preview"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Github API Request
        if: steps.check.outputs.triggered == 'true'
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get PR informations
        if: steps.check.outputs.triggered == 'true'
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
      - name: Checkout branch
        if: steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.pr_data.outputs.branch }}
      - name: Build
        if: steps.check.outputs.triggered == 'true'
        run: |
          cd frontend
          npm ci
          npm run build
          cp -r "./build" "./dist"
        env:
          CI: false
      - name: Deploy to Preview channel
        if: steps.check.outputs.triggered == 'true'
        id: deploy_preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_LOC_HOANG_WEBPAGE }}"
          projectId: loc-hoang-webpage
          expires: 7d
          channelID: "${{ steps.pr_data.outputs.branch }}"
          entryPoint: "./frontend"
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
      - name: Post comment
        if: steps.check.outputs.triggered == 'true'
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: (`:+1: Deploy preview succeeded
              URL: ${{ steps.deploy_preview.outputs.details_url }}
              Expire: ${{ steps.deploy_preview.outputs.expire_time }}
              `)
            })
